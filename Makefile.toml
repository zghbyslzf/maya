[tasks.build]
command = "cargo"
args = ["build", "--release"]
workspace = false # 关键修复：禁止在 workspace 成员中执行此任务
cwd = "." # 确保命令在根目录执行

[tasks.pkg]
dependencies = ["build"]
command = "cmd"
args = ["/c", "if not exist pkg mkdir pkg"]
workspace = false
cwd = "."

[tasks.wasm-bindgen]
dependencies = ["pkg"]
command = "wasm-bindgen"
args = [
  "target/wasm32-unknown-unknown/release/maya.wasm",
  "--out-dir",
  "./pkg",
  "--target",
  "nodejs"
]
workspace = false
cwd = "."

[tasks.update-version]
dependencies = ["wasm-bindgen"]
command = "powershell"
args = [
  "-Command",
  "$pkgJson = Get-Content 'pkg/package.json' | ConvertFrom-Json; $version = [version]$pkgJson.version; $pkgJson.version = \"$($version.Major).$($version.Minor).$($version.Build + 1)\"; $pkgJson | ConvertTo-Json -Depth 100 | ForEach-Object { $_ -replace '    ', '  ' } | Set-Content 'pkg/package.json'"
]
workspace = false
cwd = "."


[tasks.npm-publish]
dependencies = ["update-version"]
command = "npm.cmd"
args = ["publish", "--registry=https://registry.npmjs.org"]
workspace = false
cwd = "pkg"

[tasks.publish-all]
dependencies = ["npm-publish"]
command = "powershell"
args = ["-Command", "Write-Host 'Publish completed!'"]
workspace = false
cwd = "."

[tasks.build-push]
command = "powershell"
args = ["-Command", "Write-Host 'Build and WASM bindgen completed!'"]
dependencies = ["build", "wasm-bindgen", "update-version", "npm-publish", "publish-all"]
workspace = false
cwd = "."



